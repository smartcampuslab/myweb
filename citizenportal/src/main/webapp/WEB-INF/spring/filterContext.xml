<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012-2013 Trento RISE Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.1.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
    http://www.springframework.org/schema/security 
  	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<bean
		class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer" />

	<!-- AC SERVICE PROVIDER FILTER INTEGRATION -->
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/css/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/partials/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/img/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/js/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/lib/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/fonts/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/login" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/check" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/mobile" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/console_login" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/console_check" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/iframe_login" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/iframe_check" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/prelogin" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/pdf/**" security="none" />
	
	<sec:http pattern="/rest/**" entry-point-ref="forbEntryPoint"
		use-expressions="true" create-session="stateless"> <!-- ifRequired -->
		<sec:custom-filter position="PRE_AUTH_FILTER" ref="authTokenFilter" />
		<sec:intercept-url pattern="/**" access="isFullyAuthenticated()" />
	</sec:http>
	<!-- 	pattern="/web/**" -->
	<sec:http disable-url-rewriting="true" auto-config="false"><!-- use-expressions="true" -->
	    <sec:intercept-url pattern="/prelogin" access="IS_AUTHENTICATED_ANONYMOUSLY" />
	    <sec:intercept-url pattern="/ifindex" access="IS_AUTHENTICATED_ANONYMOUSLY" />
	    <sec:intercept-url pattern="/adc_login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
<!-- 	    <sec:intercept-url pattern="/console*" access="ROLE_ADMIN" /> -->
 	<sec:intercept-url pattern="/console_login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
<!-- 		<sec:form-login login-page="/console_login" default-target-url="/console" -->
<!-- 		authentication-failure-url="/console_login_error"/> -->
		<sec:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<sec:session-management invalid-session-url="/prelogin" session-fixation-protection="newSession" />
		<sec:form-login login-page="/prelogin" />	<!-- <sec:form-login login-page="/login" /> -->
		<sec:logout invalidate-session="true" logout-url="/logout"
			delete-cookies="true"
			logout-success-url="/" />
		<!-- JSESSIONID,open_id_session_id,vasdevgoogle -->
	</sec:http>

	<bean id="forbEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint">
	</bean>

	<bean id="authTokenFilter" class="eu.trentorise.smartcampus.aac.conf.OAuthTokenFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="preauthAuthProvider" />
	</sec:authentication-manager>
	
	<bean id="preauthAuthProvider"
		class="eu.trentorise.smartcampus.aac.conf.OAuthAuthenticationProvider">
	</bean>
	
<!-- 	<sec:authentication-manager alias="authenticationManagerConsole"> -->
<!-- 		<sec:authentication-provider> -->
<!-- 		    <sec:user-service> -->
<!-- 		        <sec:user name="vallag1" password="password1" authorities="ROLE_ADMIN"/> -->
<!-- 		    </sec:user-service> -->
<!-- 		</sec:authentication-provider>     -->
<!-- 	</sec:authentication-manager> -->

<!-- 	<bean id="tokenStore" -->
<!-- 		class="eu.trentorise.smartcampus.aac.conf.impl.InMemoryTokenStore" /> -->

	<!-- AC SERVICE PROVIDER FILTER INTEGRATION -->
	<!-- <bean id="acClient" class="eu.trentorise.smartcampus.ac.provider.filters.AcClient"> -->
	<!-- <property name="endpointUrl" value="${ac.endpoint.url}" /> -->
	<!-- </bean> -->

	<!-- <sec:http entry-point-ref="forbEntryPoint" use-expressions="true" -->
	<!-- create-session="stateless"> -->
	<!-- <sec:custom-filter position="PRE_AUTH_FILTER" ref="authTokenFilter" 
		/> -->
	<!-- <sec:intercept-url pattern="/rest/validatetoken/**" access="permitAll()" 
		/> -->
	<!-- <sec:intercept-url pattern="/index.jsp" access="permitAll()" /> -->
	<!-- <sec:intercept-url pattern="/css/**" access="permitAll()" /> -->
	<!-- <sec:intercept-url pattern="/html/**" access="permitAll()" /> -->
	<!-- <sec:intercept-url pattern="/img/**" access="permitAll()" /> -->
	<!-- <sec:intercept-url pattern="/js/**" access="permitAll()" /> -->
	<!-- <sec:intercept-url pattern="/lib/**" access="permitAll()" /> -->
	<!-- <sec:intercept-url pattern="/**" access="isFullyAuthenticated()" /> -->
	<!-- <sec:anonymous enabled="true" /> -->
	<!-- </sec:http> -->

	<!-- <bean id="forbEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"> -->
	<!-- </bean> -->

	<!-- <bean id="authTokenFilter" class="eu.trentorise.smartcampus.ac.provider.filters.AcProviderFilter"> -->
	<!-- <property name="authenticationManager" ref="authenticationManager" 
		/> -->
	<!-- </bean> -->

	<!-- <sec:authentication-manager alias="authenticationManager"> -->
	<!-- <sec:authentication-provider ref="preauthAuthProvider" /> -->
	<!-- </sec:authentication-manager> -->

	<!-- <bean id="preauthAuthProvider" class="eu.trentorise.smartcampus.ac.provider.filters.SpringAcProvider"> -->
	<!-- <constructor-arg value="${ac.endpoint.url}" /> -->
	<!-- </bean> -->

</beans>
